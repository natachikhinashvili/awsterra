name: 'Terraform'

on:
  push:
    branches: [ "main" ]


  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region eu-central-1

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image to ECR
      env:
        AWS_REGION: eu-central-1
        ECR_REGISTRY: 850286438394.dkr.ecr.eu-central-1.amazonaws.com
        ECR_REPOSITORY: natsrepo
      run: |
        # Login to ECR
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

          # Build and tag Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./coolweb/

          # Push Docker image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init


    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
